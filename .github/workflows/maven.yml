on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '8' # Change if your project uses a different version

      - name: Set up Maven
        run: sudo apt-get update && sudo apt-get install -y maven

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-m2
      
      - name: Install dependencies for headless Chrome
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libxss1 \
            libappindicator3-1 \
            libatk-bridge2.0-0 \
            libatk1.0-0 \
            libcups2 \
            libgdk-pixbuf2.0-0 \
            libnspr4 \
            libnss3 \
            libxcomposite1 \
            libxrandr2 \
            libgbm1 \
            xdg-utils \
            wget

      - name: Install dependencies for headless Firefox
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libxss1 \
            libappindicator3-1 \
            libatk-bridge2.0-0 \
            libatk1.0-0 \
            libcups2 \
            libgdk-pixbuf2.0-0 \
            libnspr4 \
            libnss3 \
            libxcomposite1 \
            libxrandr2 \
            libgbm1 \
            xdg-utils \
            wget 

      - name: Install Firefox (latest stable version)
        run: |
          FIREFOX_URL="https://download.mozilla.org/?product=firefox-latest&os=linux64&lang=en-US"
          wget -q --show-progress --https-only --timestamping "${FIREFOX_URL}" -O firefox-latest.tar
          
          tar xf firefox-latest.tar
          
          sudo mv firefox /opt/firefox
          sudo ln -sf /opt/firefox/firefox /usr/local/bin/firefox

      - name: Install Geckodriver
        run: |
          # Download the latest version of Geckodriver from GitHub
          GECKODRIVER_VERSION=$(curl -s https://api.github.com/repos/mozilla/geckodriver/releases/latest | jq -r '.tag_name')
          wget https://github.com/mozilla/geckodriver/releases/download/${GECKODRIVER_VERSION}/geckodriver-${GECKODRIVER_VERSION}-linux64.tar.gz
          tar -xvzf geckodriver-${GECKODRIVER_VERSION}-linux64.tar.gz
          sudo mv geckodriver /usr/local/bin/


      - name: Run Maven tests
        run: mvn clean test -Dsurefire.suiteXmlFiles=src/test/resources/testng.xml
     
      - name: Install Allure CLI
        run: |
          wget https://github.com/allure-framework/allure2/releases/download/2.27.0/allure-2.27.0.tgz
          tar -zxvf allure-2.27.0.tgz
          sudo mv allure-2.27.0 /opt/allure
          sudo ln -s /opt/allure/bin/allure /usr/local/bin/allure

      - name: Generate Allure Result
        run: |
          allure generate allure-results --clean -o allure-report

      - name: Upload Allure Results
        uses: actions/upload-artifact@v4
        with:
          name: allure-results
          path: target/allure-results/

      - name: Upload Allure HTML Report
        uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: allure-report/
